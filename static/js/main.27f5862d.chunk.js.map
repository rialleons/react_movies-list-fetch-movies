{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","previewMovie","setPreviewMovie","query","setQuery","errorMessage","setErrorMessage","isLoading","setIsLoading","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","responce","movieImage","Poster","Title","Plot","imdbID","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","some","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27f5862d.chunk.js","sourcesContent":["import React from 'react';\n\nimport './MovieCard.scss';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[],\n  setMovies: (movies: Movie[]) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [previewMovie, setPreviewMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(query)\n      .then(responce => {\n        if ('Error' in responce) {\n          throw new Error('Error from server');\n        }\n\n        const movieImage = responce.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : responce.Poster;\n\n        setPreviewMovie({\n          title: responce.Title,\n          description: responce.Plot,\n          imgUrl: movieImage,\n          imdbUrl: `https://www.imdb.com/title/${responce.imdbID}`,\n          imdbId: responce.imdbID,\n        });\n      })\n      .catch(() => setErrorMessage(\n        'Can&apos;t find a movie with such a title',\n      ))\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setErrorMessage('');\n    setQuery(event.target.value);\n  };\n\n  const handleAddButton = () => {\n    const inTheList = movies\n      .some(movie => movie.imdbId === previewMovie?.imdbId);\n\n    if (!inTheList && previewMovie) {\n      setMovies([\n        ...movies,\n        previewMovie,\n      ]);\n    }\n\n    setPreviewMovie(null);\n    setQuery('');\n    setErrorMessage('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': errorMessage,\n              })}\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {previewMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {previewMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={previewMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=6612595a';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\n\nimport { Movie } from './types/Movie';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}